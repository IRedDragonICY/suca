name: 🔍 PR Quality Check

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

env:
  FORCE_COLOR: 1

jobs:
  # ===============================
  # 🧪 QUICK TESTS
  # ===============================
  quick-check:
    name: 🚀 Quick Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔍 Lint code
        run: npm run lint --if-present || echo "No lint script found"
        
      - name: 🧪 Run tests
        run: npm test -- --coverage --watchAll=false --verbose
        
      - name: 🏗️ Test build
        run: npm run build
        
      - name: 📊 Check bundle size
        run: |
          echo "📦 Build output size:"
          du -sh build/ || echo "No build directory"
          
      - name: 📝 PR Summary Comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Create PR summary
            let summary = `## 🔍 PR Quality Check Results\n\n`;
            summary += `### ✅ Checks Passed\n`;
            summary += `- 🧪 Tests executed successfully\n`;
            summary += `- 🏗️ Build completed without errors\n`;
            summary += `- 📦 Bundle size analysis completed\n\n`;
            summary += `### 📊 Build Information\n`;
            summary += `- **Node.js Version:** 18\n`;
            summary += `- **Commit:** ${context.sha.substring(0, 7)}\n`;
            summary += `- **Branch:** ${context.payload.pull_request.head.ref}\n\n`;
            summary += `🚀 Ready for review!`;
            
            // Find existing comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('PR Quality Check Results')
            );
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: summary
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: summary
              });
            }

  # ===============================
  # 🔒 SECURITY SCAN
  # ===============================
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout PR
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔍 Run security audit
        run: |
          npm audit --audit-level moderate || true
          echo "🔒 Security audit completed"
          
      - name: 📊 Dependency check
        run: |
          echo "📦 Checking for outdated dependencies:"
          npm outdated || true 